{"version":3,"file":"component---src-pages-video-with-popups-js-9af94d4562eb786e0eeb.js","mappings":"2HA6DA,UA1DwBA,IAA2B,IAA1B,SAAEC,EAAQ,OAAEC,GAAQF,EAC3C,MAAM,EAACG,EAAkB,EAACC,IAAwBC,EAAAA,EAAAA,UAAS,IACrD,EAACC,EAAe,EAACC,IAAqBF,EAAAA,EAAAA,WAAS,GAsCrD,OApCAG,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,SAASC,eAAgB,SAAQV,KAE/C,IAAKQ,EAEH,YADAG,QAAQC,MAAO,gCAA+BZ,iBAIhD,MAAMa,EAAmBA,KACvBF,QAAQG,IAAK,eAAcN,EAAMO,eACjCJ,QAAQG,IAAK,wBAAuBZ,KAEhCA,EAAoBD,EAAOe,QAAUR,EAAMO,aAAed,EAAOC,GAAmBe,OACtFN,QAAQG,IAAK,iBAAgBZ,EAAoB,KACjDI,GAAkB,GAClBE,EAAMU,QAENC,YAAW,KACTb,GAAkB,GAClBE,EAAMY,OACNjB,GAAqBkB,GAAaA,EAAY,GAAE,GAC/C,MAGDb,EAAMO,YAAcd,EAAO,GAAGgB,MAAQf,GAAqBD,EAAOe,SACpEL,QAAQG,IAAI,wCACZX,EAAqB,GACvB,EAIF,OADAK,EAAMc,iBAAiB,aAAcT,GAC9B,KACLL,EAAMe,oBAAoB,aAAcV,EAAiB,CAC1D,GACA,CAACX,EAAmBD,EAAQD,IAG7BwB,EAAAA,cAAA,OAAKC,UAAU,mBACbD,EAAAA,cAAA,SAAOE,GAAK,SAAQ1B,IAAY2B,MAAM,MAAMC,UAAQ,EAACC,MAAI,GACvDL,EAAAA,cAAA,UAAQM,IAAK9B,EAAU+B,KAAK,cAAc,gDAI3C1B,GAAkBH,EAAoBD,EAAOe,QAC5CQ,EAAAA,cAAA,OAAKC,UAAU,QAAQO,MAAO,CAACC,OAAQ,kBACrCT,EAAAA,cAAA,OAAKM,IAAK7B,EAAOC,GAAmBgC,OAAQC,IAAI,QAAQT,GAAG,eAC3DF,EAAAA,cAAA,OAAKE,GAAG,aAAazB,EAAOC,GAAmBkC,SAC/CZ,EAAAA,cAAA,KAAGQ,MAAO,CAACK,MAAO,UAAU,gBAAcnC,IAG1C,C","sources":["webpack://uxpages/./src/pages/VideoWithPopups.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './VideoWithPopups.css';\n\nconst VideoWithPopups = ({ videoSrc, popups }) => {\n  const [currentPopupIndex, setCurrentPopupIndex] = useState(0);\n  const [isPopupVisible, setIsPopupVisible] = useState(false);\n\n  useEffect(() => {\n    const video = document.getElementById(`video-${videoSrc}`);\n\n    if (!video) {\n      console.error(`Video element with id 'video-${videoSrc}' not found.`);\n      return;\n    }\n\n    const handleTimeUpdate = () => {\n      console.log(`Video Time: ${video.currentTime}`);\n      console.log(`Current Popup Index: ${currentPopupIndex}`);\n\n      if (currentPopupIndex < popups.length && video.currentTime >= popups[currentPopupIndex].time) {\n        console.log(`Showing popup ${currentPopupIndex + 1}`);\n        setIsPopupVisible(true);\n        video.pause();\n\n        setTimeout(() => {\n          setIsPopupVisible(false);\n          video.play();\n          setCurrentPopupIndex(prevIndex => prevIndex + 1);\n        }, 4000); // Show popup for 4 seconds\n      }\n\n      if (video.currentTime < popups[0].time && currentPopupIndex >= popups.length) {\n        console.log('Video looped, resetting popup index.');\n        setCurrentPopupIndex(0);\n      }\n    };\n\n    video.addEventListener('timeupdate', handleTimeUpdate);\n    return () => {\n      video.removeEventListener('timeupdate', handleTimeUpdate);\n    };\n  }, [currentPopupIndex, popups, videoSrc]);\n\n  return (\n    <div className=\"video-container\">\n      <video id={`video-${videoSrc}`} width=\"800\" controls loop>\n        <source src={videoSrc} type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n\n      {isPopupVisible && currentPopupIndex < popups.length && (\n        <div className=\"popup\" style={{border: '1px solid red'}}>\n          <img src={popups[currentPopupIndex].imgSrc} alt=\"Popup\" id=\"popupImage\" />\n          <div id=\"popupText\">{popups[currentPopupIndex].message}</div>\n          <p style={{color: 'white'}}>Popup index: {currentPopupIndex}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default VideoWithPopups;\n"],"names":["_ref","videoSrc","popups","currentPopupIndex","setCurrentPopupIndex","useState","isPopupVisible","setIsPopupVisible","useEffect","video","document","getElementById","console","error","handleTimeUpdate","log","currentTime","length","time","pause","setTimeout","play","prevIndex","addEventListener","removeEventListener","React","className","id","width","controls","loop","src","type","style","border","imgSrc","alt","message","color"],"sourceRoot":""}